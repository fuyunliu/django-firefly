# Generated by Django 3.1.7 on 2021-04-13 15:07

import commons.fields.models
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import oauth.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', commons.fields.models.PhoneField(blank=True, max_length=128, region='CN', verbose_name='手机号码')),
                ('name_mtime', models.DateTimeField(default=oauth.models._username_mtime, editable=False, verbose_name='用户名修改时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-id'],
                'get_latest_by': 'id',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='oauth.user')),
                ('nickname', models.CharField(max_length=64, unique=True, verbose_name='昵称')),
                ('gender', models.IntegerField(choices=[(None, 'Unknown'), (0, 'Male'), (1, 'Female')], null=True, verbose_name='性别')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('location', models.CharField(blank=True, max_length=64, verbose_name='地区')),
                ('about_me', models.TextField(blank=True, verbose_name='签名')),
                ('avatar_hash', models.CharField(max_length=32, verbose_name='头像哈希值')),
                ('nick_mtime', models.DateTimeField(default=oauth.models._nickname_mtime, editable=False, verbose_name='昵称修改时间')),
            ],
            options={
                'verbose_name': '个人资料',
                'verbose_name_plural': '个人资料',
                'ordering': ['-user_id'],
                'get_latest_by': 'user_id',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('code', models.CharField(max_length=32, verbose_name='代码')),
                ('level', models.IntegerField(choices=[(1, 'Province'), (2, 'City'), (3, 'Country'), (4, 'Town'), (5, 'Village')], verbose_name='级别')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='oauth.region', verbose_name='上级地区')),
            ],
            options={
                'verbose_name': '行政区划',
                'verbose_name_plural': '行政区划',
            },
        ),
    ]
